/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.mit.ll.vizlinc.components;

import edu.mit.ll.vizlinc.concurrency.VizLincLongTask;
import iap.AutomaticAnnotation;
import java.io.File;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import org.gephi.utils.progress.Progress;
import org.gephi.utils.progress.ProgressTicket;
import org.openide.util.Exceptions;

/**
 *
 * @author Glory
 */
public class IapToolComponent extends javax.swing.JPanel implements java.beans.Customizer {
    
    private Object bean;
    
    static private File inputFile;
    static private File outputFile;
    static private AutomaticAnnotation.DataBaseWiki dataBaseType;

    /**
     * Creates new customizer IapToolComponent
     */
    public IapToolComponent() {
        initComponents();
        
        
    }
    
    public void setObject(Object bean) {
        this.bean = bean;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the FormEditor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jProgressBar2 = new javax.swing.JProgressBar();
        jPanel1 = new javax.swing.JPanel();
        autoAnnotationBtn = new javax.swing.JButton();
        jProgressBar1 = new javax.swing.JProgressBar();

        setLayout(new java.awt.BorderLayout());

        autoAnnotationBtn.setText("Automatic Annotation");
        autoAnnotationBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                autoAnnotationBtnActionPerformed(evt);
            }
        });
        add(autoAnnotationBtn, java.awt.BorderLayout.PAGE_START);
        add(jProgressBar1, java.awt.BorderLayout.PAGE_END);
    }// </editor-fold>//GEN-END:initComponents

    public static void setInputFile(File input){
        inputFile = input;
    }
    public static void setOutputFile(File input){
        outputFile = input;
    }
    public static void setDataBaseToUse(AutomaticAnnotation.DataBaseWiki input){
        dataBaseType = input;
    }
    
    
    private void autoAnnotationBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_autoAnnotationBtnActionPerformed
         
         
        AutomaticAnnotationOptionsComponent options = new AutomaticAnnotationOptionsComponent(null, true); 
        options.setVisible(true);
        
        if(inputFile == null || outputFile == null || dataBaseType == null){
            return;
        }
        
        JOptionPane.showMessageDialog(null, inputFile + "  " + outputFile + "  " + dataBaseType);
         
        final VizLincLongTask task = new VizLincLongTask("Executing automatic annotation..."){
            @Override
            public void execute()
            {
                ProgressTicket pt = this.getProgressTicket();
                Progress.setDisplayName(pt, "Executing automatic annotation...");
                
               
                
                try {
                    iap.AutomaticAnnotation automaticAnnotation = new AutomaticAnnotation(inputFile, outputFile, this, dataBaseType);
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, ex, "File Error", JOptionPane.ERROR_MESSAGE);
                }
            }
         };
         
         task.run();
    }//GEN-LAST:event_autoAnnotationBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton autoAnnotationBtn;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JProgressBar jProgressBar2;
    // End of variables declaration//GEN-END:variables
}
